scalar Date
scalar Upload

input CommonTimeFilter {
  start: Date!
  end: Date!
}

type BaseTransaksi {
  nominal: Float!
  waktu: Date!
  keterangan: String
  cabang: Cabang!
  addedBy: User!
}

type User {
  id: Int!
  nama: String!
  username: String!
  avatar: String!
  kategori: String!

  sessions(options: PaginationOption): [Sesi]!
  transaksi: [Transaksi]!
  totalKunjungan: Int!
  kunjunganTerakhir: Date!
}

type Cabang {
  id: Int!
  nama: String!
  alamat: String
  avatar: String!

  listBarbermen: [Barbermen!]
  listPaketJasa: [PaketJasa]!
}

type Barbermen {
  id: Int!
  nama: String!
  cabang: Cabang
  avatar: String
  aktif: Boolean
  sessions(options: PaginationOption): [Sesi]!
  totalKunjungan: Int!
  kunjunganTerakhir: Date!
}

type Item {
  id: Int!
  nama: String!
  deskripsi: String!
  hargaJual: Float
  hargaBeli: Float!
  satuanBerat: String
  berat: Float
  brand: String
  avatar: String!
  stock: Int!
  mutations(options: PaginationOption): [MutasiItem]!
  dijual: Boolean!
}

# type MutasiItem {
#   id: Int!
#   item: Item!
#   jumlah: Int!
#   nominal: Float!
#   waktu: Date!
#   keterangan: String
#   cabang: Cabang!
#   addedBy: User!
#   type: String!
# }

interface Transaksi {
  id: Int!
  nominal: Float!
  waktu: Date!
  cabang: Cabang!
  addedBy: User!
  keterangan: String
}

interface MutasiItem {
  id: Int!
  nominal: Float!
  waktu: Date!
  cabang: Cabang!
  addedBy: User!
  keterangan: String
  item: Item!
  jumlah: Int!
}

type Penjualan implements MutasiItem {
  id: Int!
  item: Item!
  jumlah: Int!
  nominal: Float!
  waktu: Date!
  keterangan: String
  cabang: Cabang!
  addedBy: User!
  forUser: User!
  type: String!
}
type Pembelian implements MutasiItem {
  id: Int!
  item: Item!
  jumlah: Int!
  nominal: Float!
  waktu: Date!
  keterangan: String
  cabang: Cabang!
  addedBy: User!
  type: String!
}
type Penggunaan implements MutasiItem {
  id: Int!
  item: Item!
  jumlah: Int!
  nominal: Float!
  waktu: Date!
  keterangan: String
  cabang: Cabang!
  addedBy: User!
  type: String!
}

# union MutasiItem = Pembelian | Penjualan | Penggunaan
# union Transaksi = Pembelian | Penjualan | Penggunaan | Sesi

type MutasiConnection {
  mutations(options: PaginationOption): [MutasiItem]!
}

type PaketJasa {
  id: Int!
  nama: String!
  items: [String]!
  avatar: String!
  harga: Float!
  estimasiWaktu: Int!
  pictures: [Media]!
  cabang: [Cabang]!
  sessions(options: PaginationOption): [Sesi]!
  keterangan: String!
  totalKunjungan: Int!
  kunjunganTerakhir: Date!
}

type Media {
  id: Int!
  url: String!
  description: String
}

type Sesi {
  id: Int!
  scheduledStartTime: Date!
  scheduledEndTime: Date!
  executionStartTime: Date
  executionEndTime: Date
  state: SesiState!
  cabang: Cabang!
  barbermen: Barbermen!
  paketJasa: PaketJasa!
  user: User!
  addedBy: User!
  rating: Int
}

type SesiStateCount {
  state: String!
  count: Int!
}

enum SesiState {
  SCHEDULED,
  ONGOING,
  DONE,
  CANCELED
}

input PaginationOption {
  skip: Int!
  take: Int!
}

input CreateUserInput {
  nama: String!
  username: String!
  avatar: String!
}

input ItemMutationsOption {
  skip: Int!
  take: Int!
  idItem: Int!
}

input ItemCreateInput {
  nama: String!
  avatar: String
  deskripsi: String
  hargaJual: Float
  hargaBeli: Float
  satuanBerat: String
  berat: Float
  brand: String
  dijual: Boolean!
  idCabang: Int!

  nominal: Float!
  jumlah: Int!
  keterangan: String
  waktu: Date
  idAddedBy: Int!
}

input ItemUpdateInput {
  nama: String!
  deskripsi: String!
  hargaJual: Float
  hargaBeli: Float!
  satuanBerat: String
  berat: Float
  brand: String
  dijual: Boolean!
}

input BaseMutasiInput {
  idItem: Int!
  nominal: Float!
  jumlah: Int!
  keterangan: String
  waktu: Date
  idAddedBy: Int!
}

input BaseUpdateMutasiInput {
  nominal: Float!
  jumlah: Int!
  keterangan: String
  waktu: Date
}

input SellInput {
  idItem: Int!
  nominal: Float!
  jumlah: Int!
  keterangan: String
  waktu: Date
  idAddedBy: Int!
  idForUser: Int!
}

input OpenSessionInput {
  idCabang: Int!
  idBarbermen: Int!
  idForUser: Int!
  idPaketJasa: Int!
  idAddedBy: Int!
  start: Date!
}

input RescheduleInput {
  start: Date!
}

input CreateCabangInput {
  nama: String!
  alamat: String!
  avatar: String!
}

input CreateBarbermenInput {
  nama: String!
  avatar: String!
  idCabang: Int!
}

input CreatePaketJasaInput {
  nama: String!
  items: [String]!
  estimasiWaktu: Int!
  avatar: String!
  listCabang: [Int]!
  harga: Float!
}

input UpdatePaketJasaInput {
  nama: String!
  items: [String]!
  estimasiWaktu: Int!
  avatar: String!
  listCabang: [Int]!
  harga: Float!
  keterangan: String
}

input FindSessionInRangeOptions {
  idCabang: Int!
  states: [SesiState]!
  start: Date!
  end: Date!
}

input CreateAdminInput {
  username: String!
  nama: String!
  idsCabang: [Int]!
}

type Query {
  
  cabangById(id: Int!) : Cabang!
  itemById(id: Int!) : Item!
  sessionById(id: Int!) : Sesi!
  barbermenById(id: Int!) : Barbermen!
  paketJasaById(id: Int!) : PaketJasa!
  mutationsByItem(idItem: Int!, options: PaginationOption!) : [MutasiItem]!
  userById(id: Int!) : User!
  mutationById(id: Int!) : MutasiItem!

  listCabang: [Cabang]!
  listSessionInRange(options: FindSessionInRangeOptions!) : [Sesi]!
  listUser(options: PaginationOption!) : [User]!
  listItem(idCabang: Int!, options: PaginationOption!) : [Item]!
  listProduk(idCabang: Int!, options: PaginationOption!) : [Item]!

  timeline(idCabang: Int!, options: PaginationOption!) : [Transaksi]!

  findUser(keyword: String!) : [User]!
  
  nextSession : Sesi
  lastSession : Sesi

  countPerState : [SesiStateCount]!
}

type Mutation {

  signUpCustomer(name: String!, avatar: String!) : User!
  signUpAdmin(payload: CreateAdminInput!) : User!
  deleteCustomer(id: Int!) : Int!

  createCabang(payload: CreateCabangInput!) : Cabang!
  updateCabang(id: Int!, payload: CreateCabangInput!) : Cabang

  createPaketJasa(payload: CreatePaketJasaInput!) : PaketJasa!
  updatePaketJasa(id: Int!, payload: UpdatePaketJasaInput!) : PaketJasa!

  createBarbermen(payload: CreateBarbermenInput!) : Barbermen!
  updateBarbermen(id: Int!, payload: CreateBarbermenInput!) : Barbermen
  changeBarbermenName(id: Int!, nama: String!) : Barbermen!

  buyNewItem(payload: ItemCreateInput!) : Item!
  buyMoreItem(payload: BaseMutasiInput!) : Pembelian!
  sellItem(payload: SellInput!) : Penjualan!
  useItem(payload: BaseMutasiInput!) : Penggunaan!
  updateItem(id: Int!, payload: ItemUpdateInput!) : Item!
  updateMutation(idMutasi: Int!, payload: BaseUpdateMutasiInput!) : Int!

  openSession (payload: OpenSessionInput!) : Sesi!
  cancelSession (id: Int!) : Sesi!
  startSession (id: Int!) : Sesi!
  endSession (id: Int!) : Sesi!
  revertSession (id: Int!) : Sesi!
  rescheduleSession (id: Int!, start: Date!) : Sesi!
  rateSession (id: Int!, rating: Int!) : Sesi!
  deleteSession (id: Int!) : Int!

}
